#include <bits/stdc++.h>
using namespace std; 
 // Assumption: m is prime 
int modInverse(int a, int m) 
{ 
    int g = __gcd(a, m); 
    if (g != 1) 
        return -1; 
    else
        return power(a, m-2, m); 
} 
 int power(int x, unsigned int y, unsigned int m) 
{ 
    if (y == 0) 
        return 1; 
    int p = power(x, y/2, m) % m; 
    p = (p * p) % m; 
  
    return (y%2 == 0)? p : (x * p) % m; 
} 
 int main() 
{ 
    int a = 5, m = 271; 
    int m = modInverse(a, m);
    if(m==-1)
    {
        cout << "Inverse doesn't exist";
    }
    else
    {
        cout << "Modular multiplicative inverse is " << m;
    }
    return 0; 
}
